// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plutus.Infrastructure.Data;

#nullable disable

namespace Plutus.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250220163617_TransactionOriginalMigration")]
    partial class TransactionOriginalMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("plutus")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Plutus.Infrastructure.Data.Entities.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories", "plutus");

                    b.HasData(
                        new
                        {
                            Id = "f47ac10b-58cc-4372-a567-0e02b2c3d479",
                            Name = "Uncategorized"
                        });
                });

            modelBuilder.Entity("Plutus.Infrastructure.Data.Entities.GoCardlessRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("MadeAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoCardlessRequests", "plutus");
                });

            modelBuilder.Entity("Plutus.Infrastructure.Data.Entities.Obligor", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsForFixedExpenses")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Obligors", "plutus");
                });

            modelBuilder.Entity("Plutus.Infrastructure.Data.Entities.RevolutBalanceAudit", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BalanceAudits", "plutus");
                });

            modelBuilder.Entity("Plutus.Infrastructure.Data.Entities.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("Amount")
                        .HasMaxLength(36)
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExcluded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSplit")
                        .HasColumnType("bit");

                    b.Property<string>("ObligorId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("OriginalTransactionId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ObligorId");

                    b.HasIndex("OriginalTransactionId");

                    b.ToTable("Transactions", "plutus");
                });

            modelBuilder.Entity("Plutus.Infrastructure.Data.Entities.Transaction", b =>
                {
                    b.HasOne("Plutus.Infrastructure.Data.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plutus.Infrastructure.Data.Entities.Obligor", "Obligor")
                        .WithMany()
                        .HasForeignKey("ObligorId");

                    b.HasOne("Plutus.Infrastructure.Data.Entities.Transaction", "OriginalTransaction")
                        .WithMany()
                        .HasForeignKey("OriginalTransactionId");

                    b.Navigation("Category");

                    b.Navigation("Obligor");

                    b.Navigation("OriginalTransaction");
                });
#pragma warning restore 612, 618
        }
    }
}
